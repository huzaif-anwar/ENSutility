import os
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

from_email_address = "epwfbatch@centurylink.com"
fallout_report_recipients = "TeamPayOneA2@lumen.com, TeamPayTwo@lumen.com, pmt_system_fallout@lumen.com, " \
                "PMT_SYS_NOTIFICATION@lumen.com, EPWFPROD@lumen.com"
update_queries_recipients = "Girish.M@lumen.com, Emmanuel.Bandi@lumen.com, Vikas.Sharma@lumen.com, " \
                            "TeamPayOneA2@lumen.com"
cpe_recipients = "TeamPayOneA2@lumen.com"
mdw_report_recipients = "kanishk.seth1@lumen.com, priyanka.sharma1@lumen.com, TeamPayOneA2@lumen.com"
payment_ids_recipients = "TeamPayOneA2@lumen.com"

test_recipients = "anvesh.kashyap@lumen.com"


def send_email(html_content):
    # Set up the SMTP server
    server = smtplib.SMTP('mailgate.uswc.uswest.com', 25)  # Gmail's SMTP server

    # Create the email message
    msg = MIMEMultipart()
    msg['From'] = from_email_address  # replace with your Gmail address
    msg['To'] = fallout_report_recipients
    # msg['To'] = test_recipients
    msg['Subject'] = "EPWF Fallout Analysis Report - Autogenerated Email"

    # Attach the HTML content to the email
    msg.attach(MIMEText(html_content, 'html'))

    # Send the email
    server.send_message(msg)
    print("Email sent successfully")
    server.quit()
    # remove the temp file
    os.remove('../ProdSupport_scripts/pdf_file.tmp')


def send_email_for_update_queries():
    file_path = '../ProdSupport_scripts/update_queries.txt'
    # Read the update queries from the file
    with open(file_path, 'r') as file:
        update_queries = file.read()

    # Set up the SMTP server
    server = smtplib.SMTP('mailgate.uswc.uswest.com', 25)  # Gmail's SMTP server

    # Create the email message
    msg = MIMEMultipart()
    msg['From'] = from_email_address  # replace with your Gmail address
    msg['To'] = update_queries_recipients
    # msg['To'] = test_recipients
    msg['Subject'] = "Update Queries for Production - Autogenerated Email"

    # Attach the update queries to the email
    msg.attach(MIMEText(update_queries, 'plain'))

    # Send the email
    server.send_message(msg)
    print("Update queries Email sent successfully")
    server.quit()
    # Remove the file after the email is sent
    os.remove(file_path)


def send_cpe_email(file_path):
    # Set up the SMTP server
    server = smtplib.SMTP('mailgate.uswc.uswest.com', 25)  # Gmail's SMTP server

    # Create the email
    msg = MIMEMultipart()
    msg['From'] = from_email_address  # replace with your Gmail address
    msg['To'] = cpe_recipients
    # msg['To'] = test_recipients
    msg['Subject'] = "CPE data for Production - Autogenerated Email"

    # Attach the content of the file to the email
    with open(file_path, 'r') as file:
        msg.attach(MIMEText(file.read()))

    # Send the email
    server.send_message(msg)
    print("CPE Email sent successfully")
    server.quit()
    # Remove the file after the email is sent
    os.remove('../ProdSupport_scripts/'+file_path)


def send_mdw_report_email():
    # Path to the MDWRreport.txt file
    file_path = '../ProdSupport_scripts/MDWReport.txt'

    # Check if the file exists and is not empty
    if os.path.exists(file_path) and os.path.getsize(file_path) > 0:
        # Set up the SMTP server
        server = smtplib.SMTP('mailgate.uswc.uswest.com', 25)  # Gmail's SMTP server

        # Create the email
        msg = MIMEMultipart()
        msg['From'] = from_email_address  # replace with your Gmail address
        msg['To'] = mdw_report_recipients
        # msg['To'] = test_recipients
        msg['Subject'] = "MDW Fallout Report - Autogenerated Email"

        # Attach the content of the file to the email
        with open(file_path, 'r') as file:
            msg.attach(MIMEText(file.read()))

        # Send the email
        server.send_message(msg)
        print("MDW Report Email sent successfully")
        server.quit()
        # Remove the file after the email is sent
        os.remove(file_path)
    else:
        print("MDW Report is not available or empty.")


def send_payment_ids_email():
    # Set up the SMTP server
    server = smtplib.SMTP('mailgate.uswc.uswest.com', 25)

    # Create the email message
    msg = MIMEMultipart()
    msg['From'] = from_email_address
    msg['To'] = payment_ids_recipients
    # msg['To'] = test_recipients
    msg['Subject'] = "Approved Payment IDs - Autogenerated Email"

    # Attach the content of the file to the email
    with open('payment_ids.txt', 'r') as file:
        content = file.read()
        msg.attach(MIMEText(content, 'plain'))

    # Send the email
    server.send_message(msg)
    print("Approved Payment IDs Email sent successfully")
    server.quit()

    # Remove the file after the email is sent
    os.remove('payment_ids.txt')
